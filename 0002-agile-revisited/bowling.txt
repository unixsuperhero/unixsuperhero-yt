
class Game // before
  int score()
  void add(int pins)
  void adjustCurrentFrame(int pins)
  int scoreForFrame(int theFrame)
  int handleSecondThrow()
  boolean strike()
  boolean spare()
  int twoBallsInFrame()
  int nextTwoBallsForStrike()
  int nextBallForSpare()
  int getCurrentFrame()

  int itsScore
  int[] itsThrows
  int itsCurrentThrow
  int itsCurrentFrame
  boolean firstThrow




//Game.java----------------------------------
class Game
  int score()
  void add(int pins)
  void adjustCurrentFrame(int pins)
  int scoreForFrame(int theFrame)
  boolean lastBallInFrame(int pins)
  boolean strike(int pins)
  void advanceFrame()

  int itsCurrentFrame = 0;
  boolean firstThrowInFrame = true;
  Scorer itsScorer = new Scorer();

class Scorer
  void addThrow(int pins)
  int scoreForFrame(int theFrame)
  boolean strike()
  boolean spare()
  int nextTwoBallsForStrike()
  int nextBallForSpare()
  int twoBallsInFrame()

  int ball;
  int[] itsThrows = new int[21];
  int itsCurrentThrow = 0;

















//Game.java----------------------------------
public class Game
{
  public int score()
  {
    return scoreForFrame(itsCurrentFrame);
  }
  public void add(int pins)
  {
    itsScorer.addThrow(pins);
    adjustCurrentFrame(pins);
  }
  private void adjustCurrentFrame(int pins)
  {
    if (lastBallInFrame(pins))
      advanceFrame();
    else
      firstThrowInFrame = false;
  }
  private boolean lastBallInFrame(int pins)
  {
    return strike(pins) || !firstThrowInFrame;
  }
  private boolean strike(int pins)
  {
    return (firstThrowInFrame && pins == 10);
  }
  private void advanceFrame()
  {
    itsCurrentFrame = Math.min(10, itsCurrentFrame + 1);
  }
  public int scoreForFrame(int theFrame)
  {
    return itsScorer.scoreForFrame(theFrame);
  }
  private int itsCurrentFrame = 0;
  private boolean firstThrowInFrame = true;
  private Scorer itsScorer = new Scorer();
}

//Scorer.java----------------------------------
public class Scorer
{
  public void addThrow(int pins)
  {
    itsThrows[itsCurrentThrow++] = pins;
  }
  public int scoreForFrame(int theFrame)
  {
    ball = 0;
    int score=0;
    for (int currentFrame = 0;
         currentFrame < theFrame;
         currentFrame++)
    {
      if (strike())
      {
        score += 10 + nextTwoBallsForStrike();
        ball++;
      }
      else if ( spare() )
      {
        score += 10 + nextBallForSpare();
        ball+=2;
      } else {
        score += twoBallsInFrame();
        ball+=2;
      }
    }
    return score;
  }
  private boolean strike()
  {
    return itsThrows[ball] == 10;
  }
  private boolean spare()
  {
    return (itsThrows[ball] + itsThrows[ball+1]) == 10;
  }
  private int nextTwoBallsForStrike()
  {
    return itsThrows[ball+1] + itsThrows[ball+2];
  }
  private int nextBallForSpare()
  {
    return itsThrows[ball+2];
  }
  private int twoBallsInFrame()
  {
    return itsThrows[ball] + itsThrows[ball+1];
  }

  private int ball;
  private int[] itsThrows = new int[21];
  private int itsCurrentThrow = 0;
}
